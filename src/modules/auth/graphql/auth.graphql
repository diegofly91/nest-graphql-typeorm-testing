type UserPayload {
    id: Int!
    email: String!
    status: String!
    roleId: Int!
    roleName: String
}

enum SocialProviders {
    GOOGLE
    FACEBOOK
}

type Token {
    access_token: String!
    expirate_in: Int!
}

input LoginUserDto {
    email: String!
    password: String!
}

input LoginSocialDto {
    accessToken: String!
    provider: SocialProviders!
}

input RegisterSocialDto {
    accessToken: String!
    provider: SocialProviders!
    roleType: RoleType!
}

# input UpdatePasswordDto {
#     password: String!
#     newPassword: String!
# }

type Query {
    userCurrentData: UserPayload
}

type Mutation {
    loginUser(input: LoginUserDto!): Token
    loginSocial(input: LoginSocialDto!): Token
    registerSocial(input: RegisterSocialDto!): Token
}
name: CDCI for AWS

on:
   push:
     branches:
       - main
   pull_request:
     branches:
       - main
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2
      - run: npm install
      - run: echo PORT ${{ vars.DATABASE_PORT }} 
      - name: 'Create env file'
        run: |
          echo APP_NAME= ${{ vars.APP_NAME }} > .env
          echo PORT= ${{ vars.PORT }} >> .env
          echo DB_TYPE= ${{ vars.DB_TYPE }} >> .env
          echo DATABASE_HOST= ${{ vars.DATABASE_HOST }} >> .env
          echo DATABASE_PORT= ${{ vars.DATABASE_PORT }} >> .env
          echo DATABASE_USER= ${{ vars.DATABASE_USER }} >> .env
          echo DATABASE_PASS= ${{ secrets.DATABASE_PASS }} >> .env
          echo DATABASE_NAME= ${{ vars.DATABASE_NAME }} >> .env
          echo DATABASE_MIGRATIONS_DIR= ${{ vars.DATABASE_MIGRATIONS_DIR }} >> .env
          echo DATABASE_TIMEZONE= ${{ vars.DATABASE_TIMEZONE }}
          echo DATABASE_AUTOLOADENTITIES= ${{ vars.DATABASE_AUTOLOADENTITIES }} >> .env
          echo DATABASE_PGTZ= ${{ vars.DATABASE_PGTZ }} >> .env
          echo DB_TIMEOUT= ${{ vars.DB_TIMEOUT }} >> .env
          echo GRAPHQL_DEGUB= ${{ vars.GRAPHQL_DEGUB }} >> .env
          echo JWT_SECRET= ${{ secrets.JWT_SECRET }} >> .env
          echo GOOGLE_CLIENT_ID= ${{ vars.GOOGLE_CLIENT_ID }} >> .env
          echo GOOGLE_CLIENT_SECRET= ${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env
          echo FACEBOOK_CLIENT_ID= ${{ vars.FACEBOOK_CLIENT_ID }} >> .env
          echo FACEBOOK_CLIENT_SECRET= ${{ secrets.FACEBOOK_CLIENT_SECRET }} >> .env
      - run: npm run build
      - run: npm run test:e2e

      - name: rsync deployments
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete
          path: ./*
          remote_path: /var/www/my-app/
          remote_host: ec2-3-93-56-43.compute-1.amazonaws.com
          remote_user: ubuntu
          remote_key: "${{ secrets.SSH_PRIVATE_KEY }}"

